@model Biz.Lib.Authentication.ChangePasswordModel
@using Biz.Lib.TACM.Resources.Resources

<h3 class="text-uppercase mb-2">@ViewText.TITLE_DOIMATKHAU</h3>
<div class="card p-4">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12 text-center">
                @using (@Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { id = "changePasswordForm", name = "changePasswordForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="text-center mb-2">
                        <label>@ViewText.TEXT_CHANGEPASSWORD_LENGTH</label>
                    </div>
                    <div class="mb-3">
                        @Html.TextBoxFor(x => x.OldPassword, new { @class = "form-control text-center mce-placeholder", @maxlength = 15, @type = "password", placeholder = ViewText.PLACEHOLDER_CURRENTPASSWORD })
                        <small class="form-text text-danger"><span for="OldPassword"></span></small>
                    </div>
                    <div class="mb-3">
                        @Html.TextBoxFor(x => x.NewPassword, new { @class = "form-control text-center", @maxlength = 15, @type = "password", placeholder = ViewText.PLACEHOLDER_NEWPASSWORD })
                        <small class="form-text text-danger"><span for="NewPassword"></span></small>
                    </div>
                    <div class="mb-4">
                        @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control text-center", @maxlength = 15, @type = "password", placeholder = ViewText.PLACEHOLDER_CONFIRMPASSWORD })
                        <small class="form-text text-danger"><span for="ConfirmPassword"></span></small>
                    </div>
                    <div class="text-center mb-0">
                        <button class="btn btn-danger btn-lg text-uppercase" type="submit">@ViewText.BUTTON_DOIMATKHAU</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#changePasswordForm").on("submit",
        function () {
            if ($("#changePasswordForm").valid()) {
                $.ajax({
                    type: $("#changePasswordForm").prop("method"),
                    url: $("#changePasswordForm").prop("action"),
                    data: $("#changePasswordForm").serialize(),
                    success: function (response) {
                        if (!response.IsSuccess) {
                            $.notify({ message: response.Messages[0] }, { type: "danger" });
                        }
                        else {
                            $.notify({ message: response.Messages[0] }, { type: "success", onClosed: function () {
                                window.location = response.Messages[1];
                            }});
                        }
                    }
                });
            }
            return false;
        }
    );

    $("#changePasswordForm").validate({
        ignore: '',
        rules: {
            "OldPassword": {
                required: true,
                minlength: 6,
                maxlength: 15
            },
            "NewPassword": {
                required: true,
                minlength: 6,
                maxlength: 15
            },
            "ConfirmPassword": {
                required: true,
                minlength: 6,
                maxlength: 15,
                equalTo: "#NewPassword"
            }
        },
        messages:
        {
             @*required: "@string.Format((ValidationMessages.VALIDATION_KIEMTRARONG),"Mật khẩu")",
                    minlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Mật khẩu hiện tại")",
                    maxlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOIDA, "Mật khẩu hiện tại")"*@
            "OldPassword": {
                required: "@string.Format((ValidationMessages.VALIDATION_KIEMTRARONG),"Mật khẩu")",
                minlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Mật khẩu","6")",
                maxlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Mật khẩu","15")",
            },
            "NewPassword": {
                  required: "@string.Format((ValidationMessages.VALIDATION_KIEMTRARONG),"Mật khẩu mới")",
                minlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Mật khẩu mới","6")",
                maxlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Mật khẩu mới","15")",
            },
            "ConfirmPassword": {
                required: "@string.Format((ValidationMessages.VALIDATION_KIEMTRARONG), "Nhập lại mật khẩu mới")",
                minlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Nhập lại mật khẩu mới","6")",
                maxlength: "@string.Format(ValidationMessages.VALIDATION_SOLUONGKYTUTOITHIEU, "Nhập lại mật khẩu mới","15")",
                equalTo: "@ValidationMessages.VALIDATION_KIEMTRALAIMATKHAU"
            }
                    },
        errorPlacement: function (error) {
                        console.log(error);
                        var htmlFor = error[0].htmlFor;

            $('span[for="' + htmlFor + '"]').each(function () {
                $(this).append(error);
                        });
                    },
        success: function (error) {
                        error.remove();
                    }
                });
</script>

